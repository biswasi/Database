/* The users' info is stored in the table users with the following structure:
first_name: user's first name;second_name: user's last name; attribute: a unique attribute string of this user.
It seems that only the users those attribute was generated by the old version of your special algorithm were affected. Such attributes have the following format (accurate to letter cases): <one or more arbitrary character>%<first name>_<second name>%<zero or more arbitrary characters>. 
It's your duty now to warn the users that have these attributes about possible risks.*/

CREATE PROCEDURE securityBreach()
BEGIN
	SELECT * FROM users WHERE attribute LIKE BINARY CONCAT('%_\%%',first_name,'\_',second_name, '%\%%')
 ORDER BY attribute;
END
/*
The program will be given a table answers with the following columns:
id - the unique ID of the question;correct_answer - the correct answer to the question, given as a string;given_answer - the answer given to the question, which can be NULL.
Your task is to return the table with a column id and a column checks, where for each answers id the following string should be returned:
"no answer" if the given_answer is empty;
"correct" if the given_answer is the same as the correct_answer;
"incorrect" if the given_answer is not empty and is incorrect.
*/
CREATE PROCEDURE solution()
    SELECT id, IF (ISNULL(given_answer ), "no answer", IF(given_answer=correct_answer,"correct","incorrect") ) AS checks
    FROM answers
    ORDER BY id;
